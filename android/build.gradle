import com.android.Version

buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["NosyLogger_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.4.2"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.google.protobuf:protobuf-gradle-plugin:0.9.4"
  }
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"
apply plugin: "com.google.protobuf"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["NosyLogger_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["NosyLogger_" + name]).toInteger()
}

static def supportsNamespace() {
  def parsed = Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  if (major == 7 && minor >= 3) {
    return true
  }

  return major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "dev.nosytools.logger"
  } else {
    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestDeprecated.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()
  }

  buildTypes {
    Properties properties = new Properties()

    if (rootProject.file("local.properties").exists()) {
      properties.load(rootProject.file("local.properties").newDataInputStream())
    }

    debug {
      buildConfigField "String", "COLLECTOR_URL", '"127.0.0.1:8080"'
    }

    release {
      buildConfigField "String", "COLLECTOR_URL", '"' + properties.getProperty("collectorUrl", "") + '"'

      minifyEnabled true
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main {
      proto {
        srcDir '/src/main/proto'
      }
    }
  }

  packagingOptions {
    pickFirst 'lib/arm64-v8a/libc++_shared.so'
    pickFirst 'lib/arm64-v8a/libfbjni.so'
    pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    pickFirst 'lib/armeabi-v7a/libfbjni.so'
    pickFirst 'lib/x86/libc++_shared.so'
    pickFirst 'lib/x86/libfbjni.so'
    pickFirst 'lib/x86_64/libc++_shared.so'
    pickFirst 'lib/x86_64/libfbjni.so'
  }
}

def grpc_version = getExtOrDefault("grpcVersion")

protobuf {
  protoc { artifact = 'com.google.protobuf:protoc:3.23.4' }

  plugins {
    grpc { artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version" }
  }

  generateProtoTasks {
    all().each { task ->
      task.builtins {
        java { option 'lite' }
      }

      task.plugins {
        grpc { option 'lite' }
      }
    }
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  implementation 'com.facebook.react:react-android:0.73.4'
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  // grpc
  implementation "io.grpc:grpc-okhttp:$grpc_version";
  implementation "io.grpc:grpc-protobuf-lite:$grpc_version";
  implementation "io.grpc:grpc-stub:$grpc_version";
  implementation 'javax.annotation:javax.annotation-api:1.3.2';

  // bouncy castle
  implementation "org.bouncycastle:bcpkix-jdk15to18:1.71"
  implementation "org.bouncycastle:bcprov-jdk15to18:1.71"
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "NosyLogger"
    codegenJavaPackageName = "dev.nosytools.logger"
  }
}
